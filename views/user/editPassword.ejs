<%- include('../layouts/header') %>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">

<header class="header_area sticky-header">
    <div class="main_menu">
<nav class="navbar navbar-expand-lg navbar-light main_box">
    <div class="container">
        <!-- Brand and toggle get grouped for better mobile display -->
        <a class="navbar-brand logo_h" href="index"><img src="img/logo.png" alt=""></a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent"
         aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
        </button>
        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse offset" id="navbarSupportedContent">
            <ul class="nav navbar-nav menu_nav ml-auto">
                <li class="nav-item "><a class="nav-link" href="/">Home</a></li>
                <li class="nav-item submenu dropdown">
                    <a href="#" class="nav-link dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true"
                     aria-expanded="false">Shop</a>
                    <ul class="dropdown-menu">
                        <li class="nav-item"><a class="nav-link" href="shop">Shop Category</a></li>
                        <li class="nav-item"><a class="nav-link" href="checkout">Product Checkout</a></li>
                        <li class="nav-item"><a class="nav-link" href="cart">Shopping Cart</a></li>
                    </ul>
                </li>
                <li class="nav-item submenu dropdown active">
                    <a href="#" class="nav-link dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true"
                     aria-expanded="false">Account</a>
                    <ul class="dropdown-menu">
                        <li class="nav-item"><a class="nav-link" href="account">Account</a></li>
                    </ul>
                </li>
                <li class="nav-item submenu dropdown">
                    <a href="#" class="nav-link dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true"
                     aria-expanded="false">Pages</a>
                    <ul class="dropdown-menu">
                        <% if (user) { %>
                            <li class="nav-item"><a class="nav-link" href="#">Welcome, <%= user.name %>!</a></li>
                            <li class="nav-item"><a class="nav-link" href="logout">Logout</a></li>
                        <% } else { %>
                            <li class="nav-item"><a class="nav-link" href="login">Login</a></li>
                        <% } %>
                    </ul>
                </li>
                <li class="nav-item"><a class="nav-link" href="contact">Contact</a></li>
            </ul>
            <ul class="nav navbar-nav navbar-right">
                <li class="nav-item"><a href="/cart" class="cart"><span class="ti-bag"></span></a></li>
                <li class="nav-item">
                    <button class="search"><span class="lnr lnr-magnifier" id="search"></span></button>
                </li>
            </ul>
        </div>
    </div>
</nav>
</div>
<div class="search_input" id="search_input_box">
    <div class="container">
        <form class="d-flex justify-content-between">
            <input type="text" class="form-control" id="search_input" placeholder="Search Here">
            <button type="submit" class="btn"></button>
            <span class="lnr lnr-cross" id="close_search" title="Close Search"></span>
        </form>
    </div>
</div>
</header>


<section class="banner-area organic-breadcrumb">
    <div class="container">
        <div class="breadcrumb-banner d-flex flex-wrap align-items-center justify-content-end">
            <div class="col-first">
                <h1>ACCOUNT</h1>
                <nav class="d-flex align-items-center">
                    <a href="/account">Account<span class="lnr lnr-arrow-right"></span></a>
                    <a href="/edit-password">Update Password</a>
                </nav>
            </div>
        </div>
    </div>
</section>

<div class="container mt-5">
    <section id="editPasswordForm" class="form-container">
        <h2 class="mb-4 text-center">Update Password</h2>
        <form id="actualEditPasswordForm" novalidate>
            <!-- Current Password -->
            <div class="mb-3">
                <label for="currentPassword" class="form-label">Current Password</label>
                <input type="password" class="form-control" id="currentPassword" name="currentPassword" required aria-describedby="currentPasswordHelp">
                <div class="invalid-feedback" id="currentPasswordError">
                    Please enter your current password.
                </div>
            </div>

            <!-- New Password -->
            <div class="mb-3">
                <label for="newPassword" class="form-label">New Password</label>
                <input type="password" class="form-control" id="newPassword" name="newPassword" required
                       pattern="^(?! )[A-Za-z0-9!@#$%^&*()_+]{4,}$"
                       aria-describedby="newPasswordHelp"
                       title="Password must be at least 4 characters long, should not start with a space, and can include letters, numbers, and specific symbols.">
                <div class="invalid-feedback" id="newPasswordError">
                    Password must be at least 4 characters long, should not start with a space, and can include letters, numbers, and symbols (!@#$%^&*()_+).
                </div>
            </div>

            <!-- Confirm Password -->
            <div class="mb-3">
                <label for="confirmPassword" class="form-label">Confirm New Password</label>
                <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" required aria-describedby="confirmPasswordHelp">
                <div class="invalid-feedback" id="confirmPasswordError">
                    Passwords do not match.
                </div>
            </div>

            <!-- Show Password Toggle -->
            <div class="form-check mb-4">
                <input type="checkbox" class="form-check-input" id="showPasswords">
                <label class="form-check-label" for="showPasswords">Show Passwords</label>
            </div>

            <!-- Action Buttons -->
            <div class="d-flex justify-content-between">
                <button type="submit" class="btn btn-primary">Update Password</button>
                <button type="button" class="btn btn-secondary" id="cancelButton">Cancel</button>
            </div>
        </form>
    </section>
</div><br><br>


<%- include("../layouts/footer.ejs") %>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const form = document.getElementById('actualEditPasswordForm');
        const showPasswordsCheckbox = document.getElementById('showPasswords');
        const cancelButton = document.getElementById('cancelButton');

        // Toggle Password Visibility
        showPasswordsCheckbox.addEventListener('change', function () {
            const passwordFields = ['currentPassword', 'newPassword', 'confirmPassword'];
            passwordFields.forEach(fieldId => {
                const field = document.getElementById(fieldId);
                field.type = this.checked ? 'text' : 'password';
            });
        });
        cancelButton.addEventListener('click', function () {
            window.location.href = '/account';
        });
        form.addEventListener('submit', function (event) {
            event.preventDefault();
            event.stopPropagation();
            resetValidation();
            if (validateForm()) {
                submitForm();
            }
            form.classList.add('was-validated');
        });

        function validateForm() {
            let isValid = true;

            const currentPassword = document.getElementById('currentPassword');
            if (currentPassword.value.trim() === '') {
                isValid = false;
                currentPassword.classList.add('is-invalid');
            } else {
                currentPassword.classList.remove('is-invalid');
                currentPassword.classList.add('is-valid');
            }

            const newPassword = document.getElementById('newPassword');
            const passwordPattern = /^(?! )[A-Za-z0-9!@#$%^&*()_+]{4,}$/;
            if (!passwordPattern.test(newPassword.value)) {
                isValid = false;
                newPassword.classList.add('is-invalid');
            } else {
                newPassword.classList.remove('is-invalid');
                newPassword.classList.add('is-valid');
            }

            const confirmPassword = document.getElementById('confirmPassword');
            if (confirmPassword.value !== newPassword.value || confirmPassword.value === '') {
                isValid = false;
                confirmPassword.classList.add('is-invalid');
            } else {
                confirmPassword.classList.remove('is-invalid');
                confirmPassword.classList.add('is-valid');
            }

            return isValid;
        }

        function resetValidation() {
            const inputs = form.querySelectorAll('.form-control');
            inputs.forEach(input => {
                input.classList.remove('is-valid');
                input.classList.remove('is-invalid');
            });
        }

        function submitForm() {
            const data = {
                currentPassword: document.getElementById('currentPassword').value,
                newPassword: document.getElementById('newPassword').value,
                confirmPassword: document.getElementById('confirmPassword').value
            };

            axios.post('/change-password', data)
                .then(response => {
                    if (response.data.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success!',
                            text: 'Your password has been updated successfully.',
                            confirmButtonText: 'OK'
                        }).then(() => {
                            window.location.href = '/account';
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'An unexpected error occurred. Please try again.',
                            confirmButtonText: 'OK'
                        });
                    }
                })
                .catch(error => {
                    if (error.response && error.response.data && error.response.data.message) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: error.response.data.message,
                            confirmButtonText: 'OK'
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'An unexpected error occurred. Please try again.',
                            confirmButtonText: 'OK'
                        });
                    }
                });
        }
    });
</script>


<style>
    .form-container {
        max-width: 500px;
        margin: auto;
        padding: 2rem;
        background: linear-gradient(135deg, #f0f0f0, #d3d3d3);
        border-radius: 12px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
        transition: transform 0.3s ease-in-out;
    }
    .form-container:hover {
        transform: translateY(-10px);
    }
    h2 {
        font-family: 'Poppins', sans-serif;
        color: #333;
        font-weight: bold;
        text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.1);
    }
    .form-control {
        border: 2px solid #ccc;
        border-radius: 8px;
        transition: border-color 0.3s ease, box-shadow 0.3s ease;
    }
    .form-control:focus {
        border-color: #FF6C00;
        box-shadow: 0 0 8px rgba(255, 108, 0, 0.4);
    }
    .form-check-label {
        cursor: pointer;
    }
    .btn {
        padding: 0.6rem 1.5rem;
        border-radius: 8px;
        font-family: 'Poppins', sans-serif;
        font-weight: 500;
        transition: background-color 0.3s ease, box-shadow 0.3s ease;
    }
    .btn-primary {
        background: linear-gradient(135deg, #FFBA00, #FF6C00);
        border: none;
        color: #fff;
    }
    .btn-primary:hover {
        background: linear-gradient(135deg, #FF9B00, #FF4B00);
        box-shadow: 0 4px 12px rgba(255, 75, 0, 0.4);
    }
    .btn-secondary {
        background-color: #6c757d;
        border: none;
        color: #fff;
    }
    .btn-secondary:hover {
        background-color: #5a6268;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    }
    .invalid-feedback {
        transition: opacity 0.3s ease;
    }
    .form-check-input:checked + .form-check-label {
        color: #FF6C00;
        transition: color 0.3s ease;
    }
</style>
